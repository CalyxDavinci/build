From 3b42abad32a563a75bad5982d4b1cdbdfb300932 Mon Sep 17 00:00:00 2001
From: xoomdev <xoomdevnet@gmail.com>
Date: Sun, 29 Jul 2012 09:20:28 -0400
Subject: [PATCH 2/3] Settings: Show full proc/version information

patch set 2: view unformatted kernel version on clicking
  the formatted kernel version

[ Stallix - Evo X ]

* Adapted for KernelVersionPreferenceController on Pie

Change-Id: I2b211fb72c25cc119f2a464b04821fcef77a8908
Signed-off-by: Joey Huab <joey@evolution-x.org>
---
 .../KernelVersionPreferenceController.java    | 52 +++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/src/com/android/settings/deviceinfo/firmwareversion/KernelVersionPreferenceController.java b/src/com/android/settings/deviceinfo/firmwareversion/KernelVersionPreferenceController.java
index 0500c89371..9116defce1 100644
--- a/src/com/android/settings/deviceinfo/firmwareversion/KernelVersionPreferenceController.java
+++ b/src/com/android/settings/deviceinfo/firmwareversion/KernelVersionPreferenceController.java
@@ -20,9 +20,20 @@ import android.content.Context;
 
 import com.android.settings.core.BasePreferenceController;
 import com.android.settingslib.DeviceInfoUtils;
+import androidx.preference.Preference;
+import android.text.TextUtils;
+import android.util.Log;
+
+import java.io.BufferedReader;
+import java.io.FileReader;
+import java.io.IOException;
 
 public class KernelVersionPreferenceController extends BasePreferenceController {
 
+    private static final String KEY_KERNEL_VERSION = "kernel_version";
+    private static final String FILENAME_PROC_VERSION = "/proc/version";
+    private static final String LOG_TAG = "KernelVersionPreferenceController";
+
     public KernelVersionPreferenceController(Context context, String preferenceKey) {
         super(context, preferenceKey);
     }
@@ -36,4 +47,45 @@ public class KernelVersionPreferenceController extends BasePreferenceController
     public CharSequence getSummary() {
         return DeviceInfoUtils.getFormattedKernelVersion(mContext);
     }
+
+    @Override
+    public String getPreferenceKey() {
+        return KEY_KERNEL_VERSION;
+    }
+
+    @Override
+    public boolean handlePreferenceTreeClick(Preference preference) {
+        if (!TextUtils.equals(preference.getKey(), KEY_KERNEL_VERSION)) {
+            return false;
+        }
+        preference.setSummary(getFullKernelVersion());
+        return false;
+    }
+
+    private String getFullKernelVersion() {
+        String procVersionStr;
+        try {
+            procVersionStr = readLine(FILENAME_PROC_VERSION);
+            return procVersionStr;
+        } catch (IOException e) {
+            Log.e(LOG_TAG,
+            "IO Exception when getting kernel version for Device Info screen", e);
+            return "Unavailable";
+        }
+    }
+
+    /**
+     * Reads a line from the specified file.
+     * @param filename the file to read from
+     * @return the first line, if any.
+     * @throws IOException if the file couldn't be read
+     */
+    private static String readLine(String filename) throws IOException {
+        BufferedReader reader = new BufferedReader(new FileReader(filename), 256);
+        try {
+            return reader.readLine();
+        } finally {
+            reader.close();
+        }
+    }
 }
-- 
2.37.3

