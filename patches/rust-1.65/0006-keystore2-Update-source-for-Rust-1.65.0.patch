From 347dc0d397e315749e36a3b38968a1173a33382c Mon Sep 17 00:00:00 2001
From: Jens Reidel <adrian@travitia.xyz>
Date: Thu, 10 Nov 2022 23:39:39 +0200
Subject: [PATCH] keystore2: Update source for Rust 1.65.0

Change-Id: Ifa766206d0c5965f240f69d3d0543ce7cfbd6abd
Signed-off-by: Jens Reidel <adrian@travitia.xyz>
---
 keystore2/src/audit_log.rs       | 2 +-
 keystore2/src/gc.rs              | 2 +-
 keystore2/src/legacy_importer.rs | 2 +-
 keystore2/src/operation.rs       | 6 +++---
 4 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/keystore2/src/audit_log.rs b/keystore2/src/audit_log.rs
index 3d7d26e5..07509d36 100644
--- a/keystore2/src/audit_log.rs
+++ b/keystore2/src/audit_log.rs
@@ -67,7 +67,7 @@ pub fn log_key_integrity_violation(key: &KeyDescriptor) {
 fn log_key_event(tag: u32, key: &KeyDescriptor, calling_app: uid_t, success: bool) {
     with_log_context(tag, |ctx| {
         let owner = key_owner(key.domain, key.nspace, calling_app as i32);
-        ctx.append_i32(if success { 1 } else { 0 })
+        ctx.append_i32(i32::from(success))
             .append_str(key.alias.as_ref().map_or("none", String::as_str))
             .append_i32(owner)
     })
diff --git a/keystore2/src/gc.rs b/keystore2/src/gc.rs
index 341aa0a6..1624b81c 100644
--- a/keystore2/src/gc.rs
+++ b/keystore2/src/gc.rs
@@ -125,7 +125,7 @@ impl GcInternal {
                     .unwrap()
                     .unwrap_key_if_required(&blob_metadata, &blob)
                     .context("In process_one_key: Trying to unwrap to-be-deleted blob.")?;
-                (self.invalidate_key)(uuid, &*blob)
+                (self.invalidate_key)(uuid, &blob)
                     .context("In process_one_key: Trying to invalidate key.")?;
             }
         }
diff --git a/keystore2/src/legacy_importer.rs b/keystore2/src/legacy_importer.rs
index 93e17358..a239ddd3 100644
--- a/keystore2/src/legacy_importer.rs
+++ b/keystore2/src/legacy_importer.rs
@@ -516,7 +516,7 @@ impl LegacyImporterState {
             }
         };
 
-        let (km_params, upgraded_blob) = get_key_characteristics_without_app_data(&km_uuid, &*blob)
+        let (km_params, upgraded_blob) = get_key_characteristics_without_app_data(&km_uuid, &blob)
             .context(
                 "In characteristics_file_to_cache: Failed to get key characteristics from device.",
             )?;
diff --git a/keystore2/src/operation.rs b/keystore2/src/operation.rs
index 4f33ba6f..1a158536 100644
--- a/keystore2/src/operation.rs
+++ b/keystore2/src/operation.rs
@@ -360,7 +360,7 @@ impl Operation {
             .before_update()
             .context("In update_aad: Trying to get auth tokens.")?;
 
-        self.update_outcome(&mut *outcome, {
+        self.update_outcome(&mut outcome, {
             let _wp = wd::watch_millis("Operation::update_aad: calling updateAad", 500);
             map_km_error(self.km_op.updateAad(aad_input, hat.as_ref(), tst.as_ref()))
         })
@@ -384,7 +384,7 @@ impl Operation {
             .context("In update: Trying to get auth tokens.")?;
 
         let output = self
-            .update_outcome(&mut *outcome, {
+            .update_outcome(&mut outcome, {
                 let _wp = wd::watch_millis("Operation::update: calling update", 500);
                 map_km_error(self.km_op.update(input, hat.as_ref(), tst.as_ref()))
             })
@@ -414,7 +414,7 @@ impl Operation {
             .context("In finish: Trying to get auth tokens.")?;
 
         let output = self
-            .update_outcome(&mut *outcome, {
+            .update_outcome(&mut outcome, {
                 let _wp = wd::watch_millis("Operation::finish: calling finish", 500);
                 map_km_error(self.km_op.finish(
                     input,
-- 
2.38.1

